{"version":3,"sources":["routes/About.js","components/Movies.js","routes/Home.js","components/Navigation.js","components/Detail.js","App.js","serviceWorker.js","index.js"],"names":["About","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","Movies","summary","slice","_this$props$movie","props","movie","id","year","title","torrents","small_cover_image","genres","react_router_dom","to","pathname","concat","state","src","alt","map","genre","index","sliceSummary","torrent","url","Home","isLoading","movies","getMovies","_callee","_yield$axios$get","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","_this","setState","stop","_this$state","src_components_Movies","Navigaion","fromLocation","Detail","_this$props","location","history","undefined","push","App","components_Navigation","react_router","path","component","Contact","exact","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1dba8390.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./About.css\";\n\nexport class About extends Component {\n  render() {\n    return (\n      <div className='about__container'>\n        <p>About page</p>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\n\nexport class Movies extends Component {\n  sliceSummary(summary) {\n    return summary.slice(0, 140);\n  }\n  render() {\n    const {\n      id,\n      year,\n      title,\n      summary,\n      torrents,\n      small_cover_image,\n      genres,\n    } = this.props.movie;\n    return (\n      <div className='movie'>\n        <Link\n          to={{\n            pathname: `/movie/${id}`,\n            state: {\n              year,\n              id,\n              title,\n              summary,\n              torrents,\n              small_cover_image,\n              genres,\n            },\n          }}\n        >\n          <img src={small_cover_image} alt={title} title={title} />\n          <div className='movie__column'>\n            <h3 className='movie__title'>{title}</h3>\n            <ul className='movie__genres'>\n              {genres.map((genre, index) => {\n                return (\n                  <li key={index} className='genres__genre'>\n                    {genre}\n                  </li>\n                );\n              })}\n            </ul>\n            <h4 className='movie__year'>{year}</h4>\n            <p className='movie__summary'>{this.sliceSummary(summary)}....</p>\n          </div>\n        </Link>\n        <ul className='torrents'>\n          {torrents.map((torrent, index) => (\n            <li key={index} className='torrents__torent'>\n              <Link to={torrent.url}>Download</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nMovies.propTypes = {\n  id: PropTypes.number,\n  year: PropTypes.number,\n  title: PropTypes.string,\n  summary: PropTypes.string,\n  poster: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Movies;\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport \"./Home.css\";\nimport axios from \"axios\";\nimport Movies from \"../components/Movies\";\n\nclass Home extends Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\n    );\n    this.setState({\n      isLoading: false,\n      movies,\n    });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className='container'>\n        {isLoading ? (\n          <div className='loader'>\n            <span className='loader__text'>Loading ...</span>\n          </div>\n        ) : (\n          <div className='movies'>\n            {movies.map((movie) => (\n              <Movies key={movie.id} movie={movie} />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nexport class Navigaion extends Component {\n  render() {\n    return (\n      <div className='nav'>\n        <Link to='/'>Main page</Link>\n        <Link\n          to={{\n            pathname: \"/about\",\n            state: {\n              fromLocation: true,\n            },\n          }}\n        >\n          About page\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Navigaion;\n","import React, { Component } from \"react\";\nimport \"./Detail.css\";\n\nexport class Detail extends Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n  }\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return (\n        <div className='about__container'>\n          <p>\n            About the film : <span>{location.state.title}</span>\n          </p>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Detail;\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { About as Contact } from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Detail from \"./components/Detail\";\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Navigation />\r\n        <Route path='/about' component={Contact} />\r\n        <Route path='/' exact={true} component={Home} />\r\n        <Route path='/movie/:id' component={Detail} />\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}